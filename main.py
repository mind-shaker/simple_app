from fastapi import FastAPI, Request
from telegram import Bot
import os
import httpx

# –ó–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
HF_TOKEN = os.getenv("HF_TOKEN")
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")

API_URL = "https://router.huggingface.co/novita/v3/openai/chat/completions"
MODEL_ID = "minimaxai/minimax-m1-80k"

bot = Bot(token=TELEGRAM_TOKEN)
app = FastAPI()

# üß† –ó–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ Hugging Face
async def query_huggingface(user_prompt: str) -> str:
    headers = {
        "Authorization": f"Bearer {HF_TOKEN}",
        "Content-Type": "application/json"
    }

    payload = {
        "messages": [
            {
                "role": "user",
                "content": user_prompt
            }
        ],
        "model": MODEL_ID
    }

    print("üöÄ –ù–∞–¥—Å–∏–ª–∞—î–º–æ –∑–∞–ø–∏—Ç –¥–æ Hugging Face...")
    print("üîë TOKEN:", HF_TOKEN[:10] + "..." if HF_TOKEN else "‚ùå –ù–µ–º–∞—î —Ç–æ–∫–µ–Ω–∞")

    async with httpx.AsyncClient() as client:
        try:
            response = await client.post(API_URL, headers=headers, json=payload)
            print("üì° Status Code:", response.status_code)

            if response.status_code == 200:
                result = response.json()
                message = result["choices"][0]["message"]
                full_content = message.get("content", "")

                if '</think>' in full_content:
                    reply = full_content.split('</think>')[-1].strip()
                else:
                    reply = full_content.split('\n\n')[-1].strip()

                return reply
            else:
                print("‚ö†Ô∏è HuggingFace response:", response.text)
                return f"‚ö†Ô∏è Hugging Face –ø–æ–º–∏–ª–∫–∞: {response.status_code}"

        except Exception as e:
            print("‚ùå –í–∏–Ω—è—Ç–æ–∫ –ø—ñ–¥ —á–∞—Å –∑–∞–ø–∏—Ç—É:", str(e))
            return "–ù–∞ –∂–∞–ª—å, —â–æ—Å—å –ø—ñ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî"

# üì© –û–±—Ä–æ–±–∫–∞ –∑–∞–ø–∏—Ç—ñ–≤ Telegram
@app.post("/webhook")
async def telegram_webhook(request: Request):
    data = await request.json()

    message = data.get("message", {})
    chat_id = message.get("chat", {}).get("id")
    user_text = message.get("text", "")

    print("üî• –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–µ–∫—Å—Ç –≤—ñ–¥ Telegram:", user_text)

    if chat_id and user_text:
        print("üî• –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –≤ –®–Ü")
        response_text = await query_huggingface(user_text)
        print("üî• –û—Ç—Ä–∏–º–∞–Ω–æ —Ç–µ–∫—Å—Ç –≤—ñ–¥ huggingface:", response_text)
        await bot.send_message(chat_id=chat_id, text=response_text)

    return {"status": "ok"}
